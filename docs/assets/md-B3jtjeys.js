import{r as S,L,I as E,O as F,b as W,o as x,w as P,g as l,i as T,f as Y,F as N,aa as O,k as A,t as b,p as V,e as D,v as j,x as Q,T as I}from"./modules/vue-CDNPdEpt.js";import{_ as U,I as R,av as G,au as H}from"./index-BURMBRjv.js";import{I as J}from"./slidev/default-DT8oxfgs.js";import"./modules/unplugin-icons-BCEpU1sy.js";import"./modules/file-saver-B7oFTzqn.js";import"./modules/shiki-D1IkZTj0.js";const K={class:"wave-container"},X={class:"wave-label"},Z={class:"wave-desc"},ee={class:"wave-freq"},te={class:"wave-row result-row"},oe={__name:"WaveAdditionSlide",setup(q){R();const r=S([]),s=S(null);let u=null;const p=[{name:"Annual Cycle",description:"1 peak per year",frequency:1,amplitude:30,phase:0,color:"#60a5fa"},{name:"Semi-Annual",description:"2 peaks per year",frequency:2,amplitude:15,phase:.5,color:"#f59e0b"},{name:"Quarterly",description:"4 peaks per year",frequency:4,amplitude:8,phase:0,color:"#10b981"}];let d=0;const M=(o,e,n=!1)=>{if(!o)return;const t=o.getContext("2d"),i=o.width,c=o.height,m=c/2;t.clearRect(0,0,i,c),t.strokeStyle="rgba(255, 255, 255, 0.1)",t.lineWidth=1,t.beginPath(),t.moveTo(0,m),t.lineTo(i,m),t.stroke(),t.strokeStyle=e.color,t.lineWidth=3,t.beginPath();const g=[];for(let a=0;a<i;a+=2){const h=a/i*Math.PI*4+d,_=Math.sin(e.frequency*h+e.phase)*e.amplitude,f=m-_;a===0?t.moveTo(a,f):t.lineTo(a,f),n&&a%60===0&&g.push({x:a,y:f})}t.stroke(),t.strokeStyle=e.color,t.lineWidth=1,t.globalAlpha=.2;for(let a=0;a<i;a+=2){const h=a/i*Math.PI*4+d,_=Math.sin(e.frequency*h+e.phase)*e.amplitude,f=(a-2)/i*Math.PI*4+d,k=Math.sin(e.frequency*f+e.phase)*e.amplitude;a>0&&k>_&&k>0&&(t.beginPath(),t.moveTo(a-2,0),t.lineTo(a-2,c),t.stroke())}t.globalAlpha=1,n&&(t.fillStyle=e.color,g.forEach(a=>{t.beginPath(),t.arc(a.x,a.y,4,0,Math.PI*2),t.fill()}))},z=o=>{if(!o)return;const e=o.getContext("2d"),n=o.width,t=o.height,i=t/2;e.clearRect(0,0,n,t),e.strokeStyle="rgba(255, 255, 255, 0.1)",e.lineWidth=1,e.beginPath(),e.moveTo(0,i),e.lineTo(n,i),e.stroke(),e.strokeStyle="#a855f7",e.lineWidth=3,e.beginPath();for(let c=0;c<n;c+=2){const m=c/n*Math.PI*4+d;let g=0;p.forEach(h=>{g+=Math.sin(h.frequency*m+h.phase)*h.amplitude});const a=i-g;c===0?e.moveTo(c,a):e.lineTo(c,a)}e.stroke(),e.fillStyle="rgba(168, 85, 247, 0.1)",e.lineTo(n,i),e.lineTo(0,i),e.closePath(),e.fill()},C=()=>{d+=.01,r.value.forEach((o,e)=>{o&&M(o,p[e],!0)}),s.value&&z(s.value),u=requestAnimationFrame(C)},B=()=>{if(console.log("=== setupCanvases called ==="),console.log("Wave canvases count:",r.value.length),console.log("Result canvas exists:",!!s.value),r.value.forEach((o,e)=>{if(o){const n=o.getBoundingClientRect();console.log(`Wave canvas ${e} rect:`,n.width,"x",n.height),o.width=n.width*2,o.height=n.height*2,o.style.width=n.width+"px",o.style.height=n.height+"px",console.log(`Wave canvas ${e} configured:`,o.width,"x",o.height)}else console.warn(`Wave canvas ${e} is null!`)}),s.value){const o=s.value.getBoundingClientRect();console.log("Result canvas rect:",o.width,"x",o.height),s.value.width=o.width*2,s.value.height=o.height*2,s.value.style.width=o.width+"px",s.value.style.height=o.height+"px",console.log("Result canvas configured:",s.value.width,"x",s.value.height)}else console.warn("Result canvas is null!");console.log("=== setupCanvases complete ===")},$=async(o=10)=>{for(let e=0;e<o;e++){await new Promise(t=>setTimeout(t,100));const n=r.value[0];if(n){const t=n.getBoundingClientRect();if(console.log(`Layout check attempt ${e+1}: canvas dimensions ${t.width}x${t.height}`),t.width>0&&t.height>0)return console.log("Layout ready!"),!0}}return console.warn("Layout timeout - canvases still have 0 dimensions"),!1};let v=!1,y=null;const w=async()=>{if(console.log(">>> initializeAnimation START"),console.log("Before nextTick - waveCanvases:",r.value.length,"resultCanvas:",!!s.value),await V(),console.log("After nextTick - waveCanvases:",r.value.length,"resultCanvas:",!!s.value),!await $()){console.error("Failed to initialize - canvases not laid out");return}console.log("WaveAdditionSlide: Initializing animation",{waveCanvasCount:r.value.length,resultCanvas:s.value}),B(),u&&(console.log("Canceling existing animation:",u),cancelAnimationFrame(u)),console.log("Starting animation..."),v=!0,C(),console.log(">>> initializeAnimation END - animationId:",u)};return L(()=>{console.log("WaveAdditionSlide mounted"),w(),r.value[0]&&!v&&(y=new IntersectionObserver(o=>{console.log("IntersectionObserver triggered, visible:",o[0].isIntersecting),o[0].isIntersecting&&!v&&(console.log("Component became visible, retrying initialization"),w())},{threshold:.1}),y.observe(r.value[0]))}),E(()=>{console.log("WaveAdditionSlide activated"),v||w()}),F(()=>{console.log("WaveAdditionSlide unmounted"),u&&cancelAnimationFrame(u),y&&y.disconnect(),v=!1}),(o,e)=>(x(),W(G,null,{default:P(()=>[e[1]||(e[1]=l("h1",null,"Building Seasonality from Simple Waves",-1)),e[2]||(e[2]=l("p",{class:"subtitle"},"Complex patterns emerge from adding simple sine waves",-1)),l("div",K,[T(" Individual waves "),(x(),Y(N,null,O(p,(n,t)=>l("div",{class:"wave-row",key:t},[l("div",X,[l("span",{class:"wave-name",style:A({color:n.color})},b(n.name),5),l("span",Z,b(n.description),1),l("span",ee,"f = "+b(n.frequency)+"Ã—",1)]),l("canvas",{ref_for:!0,ref:i=>r.value[t]=i,class:"wave-canvas",style:A({borderColor:n.color})},null,4)])),64)),T(" Result wave "),l("div",te,[e[0]||(e[0]=l("div",{class:"wave-label"},[l("span",{class:"wave-name result-name"},"Combined Pattern"),l("span",{class:"wave-desc"},"Sum of all waves above")],-1)),l("canvas",{ref_key:"resultCanvas",ref:s,class:"wave-canvas result-canvas"},null,512)])]),e[3]||(e[3]=l("div",{class:"explanation"}," Each point on the final wave = sum of points from waves above ",-1))]),_:1}))}},ne=U(oe,[["__scopeId","data-v-b3f6ceb9"]]),ue={__name:"slides.md__slidev_4",setup(q){const{$clicksContext:r,$frontmatter:s}=R();return r.setup(),(u,p)=>{const d=ne;return x(),W(J,j(Q(I(H)(I(s),3))),{default:P(()=>[D(d)]),_:1},16)}}};export{ue as default};
